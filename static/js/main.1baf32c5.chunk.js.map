{"version":3,"sources":["playground/redux-expensify.js"],"names":["addExpense","description","note","amount","createdAt","type","expense","id","uuid","setTextFilter","text","expensesReducerDefaultState","filtersReducerDefaultState","sortBy","startDate","undefined","endDate","store","createStore","combineReducers","expenses","state","action","filter","map","updates","filters","date","subscribe","console","log","getState","dispatch","sortByDate","sortByAmount","setStartDate","setEndDate"],"mappings":"oNAMMA,G,MAAa,SAAC,GAAD,QAAGC,mBAAH,MAAiB,GAAjB,MAAqBC,YAArB,MAA4B,GAA5B,MAAgCC,cAAhC,MAAyC,EAAzC,MAA4CC,iBAA5C,MAAwD,EAAxD,QAAgE,CAClFC,KAAM,cACNC,QAAS,CACRC,GAAIC,MACJP,cACAC,OACAC,SACAC,gBAmBIK,EAAgB,eAACC,EAAD,uDAAQ,GAAR,MAAgB,CACrCL,KAAM,kBACNK,SA8BKC,EAA8B,GA2B9BC,EAA6B,CAClCF,KAAM,GACNG,OAAQ,OACRC,eAAWC,EACXC,aAASD,GA6CJE,EAAQC,YAAYC,YAAgB,CACzCC,SA3EuB,WAAmD,IAAjDC,EAAgD,uDAAxCV,EAA6BW,EAAW,uCACzE,OAAQA,EAAOjB,MACd,IAAK,cACL,MAAM,GAAN,mBAAWgB,GAAX,CAAkBC,EAAOhB,UAEzB,IAAK,iBACL,OAAOe,EAAME,QAAQ,qBAAGhB,KAAgBe,EAAOf,MAE/C,IAAK,eACL,OAAOc,EAAMG,KAAK,SAAClB,GAClB,OAAIA,EAAQC,KAAOe,EAAOf,GAClB,eAAID,EAAX,GAAuBgB,EAAOG,SAEvBnB,KAGT,QACC,OAAOe,IA2DTK,QA5CsB,WAAkD,IAAhDL,EAA+C,uDAAvCT,EAA4BU,EAAW,uCAEvE,OAAQA,EAAOjB,MAEf,IAAK,kBACJ,OAAO,eACHgB,EADJ,CAECX,KAAMY,EAAOZ,OAGf,IAAK,eACJ,OAAO,eACHW,EADJ,CAECM,KAAML,EAAOK,OAGf,IAAK,iBACJ,OAAO,eACHN,EADJ,CAEClB,OAAQmB,EAAOnB,SAGjB,IAAK,iBACJ,OAAO,eACHkB,EADJ,CAECP,UAAWQ,EAAOR,YAGpB,IAAK,eACJ,OAAO,eACHO,EADJ,CAECL,QAASM,EAAON,UAGlB,QACC,OAAOK,OAaTJ,EAAMW,WAAU,WACfC,QAAQC,IAAIb,EAAMc,eAkBAd,EAAMe,SAAShC,EAfrB,CACZC,YAAa,OACbE,OAAQ,OAcUc,EAAMe,SAAShC,EAXrB,CACZC,YAAa,SACbE,OAAQ,OAUTc,EAAMe,SAASvB,EAAc,WACRQ,EAAMe,SAAShC,EARvB,CACZC,YAAa,UACbE,OAAQ,OASTc,EAAMe,SAASvB,EAAc,SAC7BQ,EAAMe,SAtIa,eAACL,EAAD,4DAAQZ,EAAR,MAAuB,CACzCV,KAAM,eACNsB,QAoIcM,CAAW,eAC1BhB,EAAMe,SAhIe,eAAC7B,EAAD,uDAAU,EAAV,MAAiB,CACrCE,KAAM,iBACNF,UA8Hc+B,CAAa,KAC5BjB,EAAMe,SA3He,eAAClB,EAAD,uDAAa,GAAb,MAAqB,CACzCT,KAAM,iBACNS,aAyHcqB,CAAa,eAC5BlB,EAAMe,SAtHa,eAAChB,EAAD,uDAAW,GAAX,MAAmB,CACrCX,KAAM,eACNW,WAoHcoB,CAAW,eAG1BP,QAAQC,IAAIb,EAAMc,c","file":"static/js/main.1baf32c5.chunk.js","sourcesContent":["import {  createStore, combineReducers } from \"redux\";\r\nimport uuid from 'uuid'\r\nimport { getAllByPlaceholderText } from \"@testing-library/react\";\r\n\r\n//Configure reducers for all these actions\r\n//ADD-EXPENSE\r\nconst addExpense = ({ description = '', note = '', amount = 0, createdAt = 0}) => ({\r\n\ttype: 'ADD_EXPENSE',\r\n\texpense: {\r\n\t\tid: uuid(),\r\n\t\tdescription,\r\n\t\tnote,\r\n\t\tamount,\r\n\t\tcreatedAt\r\n\t}\r\n});\r\n\r\n//REMOVE_EXPENSE\r\nconst removeExpense = ({ id } = {}) => ({\r\n\ttype: 'REMOVE_EXPENSE',\r\n\tid\r\n});\r\n\r\n\r\n//EDIT_EXPENSE\r\nconst editExpense = ({id, updates}) => ({\r\n\ttype: 'EDIT_EXPENSE',\r\n\tid,\r\n\tupdates\r\n})\r\n//SET_TEXT_FILTER\r\n\r\nconst setTextFilter = (text = '') => ({\r\n\ttype: 'SET_TEXT_FILTER',\r\n\ttext\r\n})\r\n\r\n//SORT_BY_DATE\r\nconst sortByDate = (date = undefined) => ({\r\n\ttype: 'SORT_BY_DATE',\r\n\tdate\r\n})\r\n\r\n//SORT_BY_AMOUNT\r\n\r\nconst sortByAmount = (amount = 0) => ({\r\n\ttype: 'SORT_BY_AMOUNT',\r\n\tamount\r\n})\r\n\r\n//SET_START_DATE\r\nconst setStartDate = (startDate = '') => ({\r\n\ttype: 'SET_START_DATE',\r\n\tstartDate\r\n})\r\n\r\n//SET_END_DATE\r\nconst setEndDate = (endDate = '') => ({\r\n\ttype: 'SET_END_DATE',\r\n\tendDate\r\n})\r\n\r\n//Expense reducer\r\n\r\nconst expensesReducerDefaultState = [];\r\n\r\nconst expensesReducer = ( state = expensesReducerDefaultState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_EXPENSE':\r\n\t\treturn [...state, action.expense]; \r\n\t\r\n\t\tcase 'REMOVE_EXPENSE':\r\n\t\treturn state.filter (({ id }) => id !== action.id );\r\n\t\t\r\n\t\tcase 'EDIT_EXPENSE':\r\n\t\treturn state.map ((expense) => {\r\n\t\t\tif (expense.id === action.id) {\r\n\t\t\t\treturn {...expense, ...action.updates}\r\n\t\t\t} else {\r\n\t\t\t\treturn expense;\r\n\t\t\t}\r\n\t\t})\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\n\r\n//Filter reducers\r\n\r\nconst filtersReducerDefaultState = { \r\n\ttext: '',\r\n\tsortBy: 'date',\r\n\tstartDate: undefined,\r\n\tendDate: undefined\r\n};\r\n\r\nconst filtersReducer = ( state = filtersReducerDefaultState, action) => {\r\n\r\n\tswitch (action.type) {\r\n\r\n\tcase 'SET_TEXT_FILTER':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttext: action.text\r\n\t\t}\r\n\t\r\n\tcase 'SORT_BY_DATE':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tdate: action.date\r\n\t\t}\r\n\r\n\tcase 'SORT_BY_AMOUNT':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tamount: action.amount\r\n\t\t}\r\n\r\n\tcase 'SET_START_DATE':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tstartDate: action.startDate\r\n\t\t}\r\n\r\n\tcase 'SET_END_DATE':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tendDate: action.endDate\r\n\t\t}\r\n\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n\r\n};\r\n\r\n//Store creation\r\n\r\nconst store = createStore(combineReducers({\r\n\texpenses: expensesReducer,\r\n\tfilters: filtersReducer\r\n}\r\n));\r\n\r\nstore.subscribe(() => {\r\n\tconsole.log(store.getState());\r\n});\r\n\r\nconst exp1 = {\r\n\tdescription: 'Rent',\r\n\tamount: 100\r\n}\r\n\r\nconst exp2 = {\r\n\tdescription: 'Coffee', \r\n\tamount: 200\r\n}\r\n\r\nconst exp3 = {\r\n\tdescription: 'Aluguel', \r\n\tamount: 500\r\n}\r\n\r\nconst expenseOne = store.dispatch(addExpense(exp1))\r\nconst expenseTwo = store.dispatch(addExpense(exp2))\r\nstore.dispatch(setTextFilter('coffee'))\r\nconst expenseThree = store.dispatch(addExpense(exp3))\r\n\r\n//edit expense amount\r\nstore.dispatch(setTextFilter('rent'))\r\nstore.dispatch(sortByDate('2019-01-01'))\r\nstore.dispatch(sortByAmount(50))\r\nstore.dispatch(setStartDate('2019-01-01'))\r\nstore.dispatch(setEndDate('2019-01-10'))\r\n\r\n\r\nconsole.log(store.getState())"],"sourceRoot":""}